{"version":3,"file":"page-2.js","sources":["../src/js/watched-queue.js"],"sourcesContent":["const watchedBtn = document.querySelector('.watched');\nconst queueBtn = document.querySelector('.queue');\nconst watchedMoviesContainer = document.querySelector(\n  '.watched-movies-container'\n);\nconst queueMoviesContainer = document.querySelector('.queue-movies-container');\n// const addToWatchedBtn = document.querySelector('.addToWatched');\n// const addToQueueBtn = document.querySelector('.addToQueue');\n\nconst STORAGE_KEY = 'movies';\n\n// Functie adaugare in local storage\nfunction addToLocalStorage(movie, listType) {\n  let moviesData = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {\n    watched: [],\n    queue: [],\n  };\n\n  // Verificăm dacă filmul există deja în listă\n  if (!moviesData[listType].some(storedMovie => storedMovie.id === movie.id)) {\n    moviesData[listType].push(movie);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(moviesData));\n  } else {\n    alert('Acest film exista deja in lista!');\n  }\n}\n\n// Functie pentru a lua lista de filme din local storage\nfunction getMoviesList(listType) {\n  let moviesData = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {\n    watched: [],\n    queue: [],\n  };\n  return moviesData[listType];\n}\n\n// Functie pentru afisarea filmelor\nfunction displayMovies(listType) {\n  // cu ajutorul functiei getMovieiList luam filmele din local storage si le salvam intr-o variabila moviesList\n  const moviesList = getMoviesList(listType);\n  const moviesContainer = document.querySelector(\n    `.${listType}-movies-container .movies-container`\n  );\n  console.log(moviesContainer);\n\n  moviesContainer.innerHTML = '';\n\n  // afisam filmele\n  moviesList.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.className = 'movie-card';\n    movieCard.innerHTML = `\n      <img src=\"${movie.imageUrl}\" alt=\"${movie.title}\" class=\"movie-poster\">\n      <h3 class=\"movie-title\">${movie.title}</h3>\n      <p class=\"movie-subtitle\">${movie.genre} | ${movie.year}</p>\n    `;\n    moviesContainer.appendChild(movieCard);\n  });\n}\n\n// functie care afiseaza filmele selectate care au fost deja vazute\nfunction showWatched() {\n  watchedMoviesContainer.style.display = 'block';\n  queueMoviesContainer.style.display = 'none';\n  displayMovies('watched');\n}\n\n// functie care afiseaza filmele selectate pentru a fi vizionate\nfunction showQueue() {\n  watchedMoviesContainer.style.display = 'none';\n  queueMoviesContainer.style.display = 'block';\n  displayMovies('queue');\n}\n\n// // adaugare film in local storage la apasarea butonului watched\n// addToWatchedBtn.addEventListener('click', e => {\n//   e.preventDefault();\n//   const selectedMovie = getMovieFromModal();\n//   addToLocalStorage(selectedMovie, 'watched');\n// });\n\n// // adaugare film in local strogare la apasarea butonului queue\n// addToQueueBtn.addEventListener('click', e => {\n//   e.preventDefault();\n//   const selectedMovie = getMovieFromModal();\n//   addToLocalStorage(selectedMovie, 'queue');\n// });\n\n// afisarea filmelor care au fost vizionate la apasarea butonului Watched din header\nwatchedBtn.addEventListener('click', e => {\n  e.preventDefault();\n  showWatched();\n});\n\n// afisarea filmelor care urmeaza sa fie vizionate la apasarea butonului Queue din header\nqueueBtn.addEventListener('click', e => {\n  e.preventDefault();\n  showQueue();\n});\n\nfunction getMovieFromModal() {\n  // Preluăm datele filmului din elementele modalului\n  const title = document.querySelector('.modal-title').textContent;\n  const genre = document.querySelector('.modal-genre').textContent;\n  const year = document.querySelector('.modal-year').textContent;\n  const id = document\n    .querySelector('[data-movie-id]')\n    .getAttribute('data-movie-id');\n\n  // Creem obiectul `selectedMovie` cu aceste date\n  return {\n    title: title,\n    genre: genre,\n    year: year,\n    id: id,\n  };\n}\n"],"names":["watchedBtn","queueBtn","watchedMoviesContainer","queueMoviesContainer","STORAGE_KEY","getMoviesList","listType","displayMovies","moviesList","moviesContainer","movie","movieCard","showWatched","showQueue"],"mappings":"kCAAA,MAAMA,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAyB,SAAS,cACtC,2BACF,EACMC,EAAuB,SAAS,cAAc,yBAAyB,EAIvEC,EAAc,SAmBpB,SAASC,EAAcC,EAAU,CAK/B,OAJiB,KAAK,MAAM,aAAa,QAAQF,CAAW,CAAC,GAAK,CAChE,QAAS,CAAE,EACX,MAAO,CAAE,CACb,GACoBE,CAAQ,CAC5B,CAGA,SAASC,EAAcD,EAAU,CAE/B,MAAME,EAAaH,EAAcC,CAAQ,EACnCG,EAAkB,SAAS,cAC/B,IAAIH,CAAQ,qCAChB,EACE,QAAQ,IAAIG,CAAe,EAE3BA,EAAgB,UAAY,GAG5BD,EAAW,QAAQE,GAAS,CAC1B,MAAMC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAY,aACtBA,EAAU,UAAY;AAAA,kBACRD,EAAM,QAAQ,UAAUA,EAAM,KAAK;AAAA,gCACrBA,EAAM,KAAK;AAAA,kCACTA,EAAM,KAAK,MAAMA,EAAM,IAAI;AAAA,MAEzDD,EAAgB,YAAYE,CAAS,CACzC,CAAG,CACH,CAGA,SAASC,GAAc,CACrBV,EAAuB,MAAM,QAAU,QACvCC,EAAqB,MAAM,QAAU,OACrCI,EAAc,SAAS,CACzB,CAGA,SAASM,GAAY,CACnBX,EAAuB,MAAM,QAAU,OACvCC,EAAqB,MAAM,QAAU,QACrCI,EAAc,OAAO,CACvB,CAiBAP,EAAW,iBAAiB,QAAS,GAAK,CACxC,EAAE,eAAc,EAChBY,GACF,CAAC,EAGDX,EAAS,iBAAiB,QAAS,GAAK,CACtC,EAAE,eAAc,EAChBY,GACF,CAAC"}