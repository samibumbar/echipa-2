{"version":3,"file":"watched-queue-CfP4OfaB.js","sources":["../../src/js/modal-movie.js","../../src/js/watched-queue.js"],"sourcesContent":["// Funcția openModal care afișează trailerul sau posterul, ratingul, voturile și popularitatea\nexport function openModal(\n  posterUrl,\n  title,\n  movieGenre,\n  description,\n  trailerUrl = null,\n  rating = null,\n  voteCount = null,\n  popularity = null\n) {\n  console.log('openModal called'); // Verificăm dacă funcția este apelată\n  console.log('Title:', title);\n  console.log('Trailer URL:', trailerUrl);\n\n  const modal = document.getElementById('movieModal');\n  const modalPoster = document.getElementById('modal-poster');\n  const modalTitle = document.getElementById('modal-title');\n  const modalGenres = document.getElementById('modal-genres');\n  const modalDescription = document.getElementById('modal-description');\n  const modalRating = document.getElementById('modal-rating');\n  const modalVotes = document.getElementById('modal-votes');\n  const modalPopularity = document.getElementById('modal-popularity');\n\n  // Verificăm dacă toate elementele există\n  if (\n    !modal ||\n    !modalPoster ||\n    !modalTitle ||\n    !modalGenres ||\n    !modalDescription ||\n    !modalRating ||\n    !modalVotes ||\n    !modalPopularity\n  ) {\n    console.error('Elementele din modal nu au fost găsite.');\n    return;\n  }\n\n  // Setăm conținutul în modal\n  modalTitle.textContent = title;\n  modalGenres.textContent = `Genuri: ${movieGenre}`;\n  modalDescription.textContent = description;\n  modalRating.textContent = rating\n    ? `Rating: ${rating}`\n    : 'Rating indisponibil';\n  modalVotes.textContent = voteCount\n    ? `${voteCount} voturi`\n    : 'Voturi indisponibile';\n  modalPopularity.textContent = popularity\n    ? `Popularitate: ${popularity}`\n    : 'Popularitate indisponibilă';\n\n  // Dacă există un trailer, adăugăm un iframe, altfel afișăm posterul\n  if (trailerUrl) {\n    console.log('Afișare trailer');\n    modalPoster.outerHTML = `<iframe id=\"modal-trailer\" width=\"100%\" height=\"315\" src=\"${trailerUrl}\" \n      frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>`;\n  } else {\n    console.log('Afișare poster');\n    modalPoster.src = posterUrl;\n  }\n\n  // Facem modalul vizibil\n  modal.classList.remove('is-hidden');\n  modal.classList.add('is-visible');\n}\n\n// Funcția closeModal care închide modalul\nexport function closeModal() {\n  console.log('Închidere modal');\n  const modal = document.getElementById('movieModal');\n  const modalTrailer = document.getElementById('modal-trailer');\n\n  if (modalTrailer) {\n    modalTrailer.remove();\n    const modalWrapper = document.querySelector('.wrapper-item');\n    modalWrapper.innerHTML = `<img id=\"modal-poster\" src=\"\" alt=\"Movie Poster\" />`;\n  }\n\n  modal.classList.remove('is-visible');\n  modal.classList.add('is-hidden');\n}\n\n// Atașăm evenimentul de închidere la butonul close\ndocument.addEventListener('DOMContentLoaded', function () {\n  document\n    .getElementById('close-modal-btn')\n    .addEventListener('click', closeModal);\n});\n","const moviesContainer = document.querySelector('.movies-container');\nconst watchedBtn = document.querySelector('.watched');\nconst queueBtn = document.querySelector('.queue');\nconst STORAGE_KEY = 'movies';\n\n  // Functie adaugare in local storage\n  function addToLocalStorage(movie, listType) {\n    let moviesData = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {\n      watched: [],\n      queue: [],\n    };\n\n    // Verificăm dacă filmul există deja în listă\n    if (\n      !moviesData[listType].some(storedMovie => storedMovie.id === movie.id)\n    ) {\n      moviesData[listType].push(movie);\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(moviesData));\n    } else {\n      alert('Acest film exista deja in lista!');\n    }\n  };\n\n\n// Functie pentru a lua lista de filme din local storage\nfunction getMoviesList(listType) {\n  let moviesData = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {\n    watched: [],\n    queue: [],\n  };\n  return moviesData[listType];\n}\n\n// Functie pentru afisarea filmelor\nfunction displayMovies(listType) {\n  const moviesList = getMoviesList(listType);\n\n  moviesList.forEach(movie => {\n    const movieCard = document.createElement('div');\n    movieCard.className = 'movie-card';\n    movieCard.innerHTML = `\n      <img src=\"movie-imgSrc\" width=\"100%\" height=\"315\" class=\"movie-image\"/>\n      <h3 class=\"movie-title\">${movie.title}</h3>\n      <p class=\"movie-subtitle\">${movie.genres} | 2020 </p>\n    `;\n    moviesContainer.appendChild(movieCard);\n  });\n}\n\n\n// // adaugare film in local storage la apasarea butonului watched\ndocument.addEventListener('click', function (e) {\n  e.preventDefault();\n  if (e.target && e.target.id === 'add-to-watched') {\n    const selectedMovie = getMovieFromModal();\n    addToLocalStorage(selectedMovie, 'watched');\n  }\n\n  if (e.target && e.target.id === 'add-to-queue') {\n    const selectedMovie = getMovieFromModal();\n    addToLocalStorage(selectedMovie, 'queue');\n  }\n});\n\n\n// afisarea filmelor care au fost vizionate la apasarea butonului Watched din header\nwatchedBtn.addEventListener('click', e => {\n  e.preventDefault();\n  moviesContainer.innerHTML = '';\n  displayMovies('watched');\n\n});\n\n// afisarea filmelor care urmeaza sa fie vizionate la apasarea butonului Queue din header\nqueueBtn.addEventListener('click', e => {\n  e.preventDefault();\n  moviesContainer.innerHTML = '';\n  displayMovies('queue');\n});\n\nfunction getMovieFromModal() {\n  const title = document.getElementById('modal-title').textContent;\n  const rating = document.getElementById('modal-rating').textContent;\n  const votes = document.getElementById('modal-votes').textContent;\n  const popularity = document.getElementById('modal-popularity').textContent;\n  const genres = document.getElementById('modal-genres').textContent;\n  const description = document.getElementById('modal-description').textContent;\n  const trailer = document.getElementById('modal-trailer').src;\n\n\n  return {\n    id: Date.now(),\n    title,\n    rating,\n    votes,\n    popularity,\n    genres,\n    description,\n    trailer\n  };\n}\n\n"],"names":["openModal","posterUrl","title","movieGenre","description","trailerUrl","rating","voteCount","popularity","modal","modalPoster","modalTitle","modalGenres","modalDescription","modalRating","modalVotes","modalPopularity","closeModal","modalTrailer","modalWrapper","moviesContainer","watchedBtn","queueBtn","STORAGE_KEY","addToLocalStorage","movie","listType","moviesData","storedMovie","getMoviesList","displayMovies","movieCard","selectedMovie","getMovieFromModal","votes","genres","trailer"],"mappings":"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"}